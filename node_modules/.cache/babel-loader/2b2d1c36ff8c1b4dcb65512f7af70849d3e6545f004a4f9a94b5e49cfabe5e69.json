{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\test\\\\findminegame\\\\src\\\\Pages\\\\MinesweeperPage\\\\Cell.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell({\n  mine,\n  dispatch,\n  setCells,\n  handleClickCell,\n  index,\n  settings\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `\n                game-broad-cell flex-div \n                ${settings.cells[index].opened ? \"open\" + mine : \"\"}\n                //${settings.cells[index].isMine ? \"bomb\" : \"\"}\n            `,\n    onClick: () => {\n      const copyCells = settings.cells.map(cell => ({\n        ...cell\n      }));\n      const updatedCells = handleClickCell(index, settings, copyCells);\n      if (updatedCells) {\n        dispatch(setCells(updatedCells));\n      }\n    },\n    children: mine === 0 ? \"\" : mine\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["Cell","mine","dispatch","setCells","handleClickCell","index","settings","_jsxDEV","className","cells","opened","isMine","onClick","copyCells","map","cell","updatedCells","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/test/findminegame/src/Pages/MinesweeperPage/Cell.js"],"sourcesContent":["\r\nfunction Cell ({ \r\n    mine,\r\n    dispatch,\r\n    setCells,\r\n    handleClickCell,\r\n    index,\r\n    settings\r\n}) {\r\n\r\n    return (\r\n        <div \r\n            className={`\r\n                game-broad-cell flex-div \r\n                ${settings.cells[index].opened ? \"open\" + mine : \"\"}\r\n                //${settings.cells[index].isMine ? \"bomb\" : \"\"}\r\n            `}\r\n            onClick={() => {\r\n                const copyCells = settings.cells.map(cell => ({ ...cell }))\r\n                const updatedCells = handleClickCell(index, settings, copyCells);\r\n                if (updatedCells) {\r\n                    dispatch(setCells(updatedCells));\r\n                }\r\n            }}\r\n        >\r\n            {mine === 0 ? \"\" : mine}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cell;"],"mappings":";;AACA,SAASA,IAAIA,CAAE;EACXC,IAAI;EACJC,QAAQ;EACRC,QAAQ;EACRC,eAAe;EACfC,KAAK;EACLC;AACJ,CAAC,EAAE;EAEC,oBACIC,OAAA;IACIC,SAAS,EAAE;AACvB;AACA,kBAAkBF,QAAQ,CAACG,KAAK,CAACJ,KAAK,CAAC,CAACK,MAAM,GAAG,MAAM,GAAGT,IAAI,GAAG,EAAE;AACnE,oBAAoBK,QAAQ,CAACG,KAAK,CAACJ,KAAK,CAAC,CAACM,MAAM,GAAG,MAAM,GAAG,EAAE;AAC9D,aAAc;IACFC,OAAO,EAAEA,CAAA,KAAM;MACX,MAAMC,SAAS,GAAGP,QAAQ,CAACG,KAAK,CAACK,GAAG,CAACC,IAAI,KAAK;QAAE,GAAGA;MAAK,CAAC,CAAC,CAAC;MAC3D,MAAMC,YAAY,GAAGZ,eAAe,CAACC,KAAK,EAAEC,QAAQ,EAAEO,SAAS,CAAC;MAChE,IAAIG,YAAY,EAAE;QACdd,QAAQ,CAACC,QAAQ,CAACa,YAAY,CAAC,CAAC;MACpC;IACJ,CAAE;IAAAC,QAAA,EAEDhB,IAAI,KAAK,CAAC,GAAG,EAAE,GAAGA;EAAI;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACC,EAAA,GA3BQtB,IAAI;AA6Bb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}