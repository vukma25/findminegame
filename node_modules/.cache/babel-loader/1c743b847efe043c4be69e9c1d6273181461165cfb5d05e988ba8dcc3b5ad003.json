{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\test\\\\findminegame\\\\src\\\\Pages\\\\MinesweeperPage\\\\Functions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Levels of game\nexport const levels = [{\n  'level': 0,\n  'row': 0,\n  'col': 0,\n  'proportion': 0,\n  'mine': 0,\n  'flag': 0,\n  'setTime': {\n    isTime: true,\n    duration: 0\n  },\n  'cells': [],\n  'isInGame': false,\n  'firstClick': true,\n  'gameOver': false\n}, {\n  'level': 1,\n  'row': 10,\n  'col': 10,\n  'proportion': 1.5,\n  'mine': 15,\n  'flag': 15,\n  'setTime': {\n    isTime: true,\n    duration: 300\n  },\n  'cells': new Array(100).fill({\n    opened: false,\n    flag: false,\n    isMine: false,\n    mine: 0\n  }),\n  'isInGame': false,\n  'firstClick': true,\n  'gameOver': false\n}, {\n  'level': 2,\n  'row': 15,\n  'col': 15,\n  'proportion': 2.5,\n  'mine': 37,\n  'flag': 37,\n  'setTime': {\n    isTime: true,\n    duration: 420\n  },\n  'cells': new Array(225).fill({\n    opened: false,\n    flag: false,\n    isMine: false,\n    mine: 0\n  }),\n  'isInGame': false,\n  'firstClick': true,\n  'gameOver': false\n}, {\n  'level': 3,\n  'row': 25,\n  'col': 25,\n  'proportion': 4,\n  'mine': 100,\n  'flag': 100,\n  'setTime': {\n    isTime: true,\n    duration: 600\n  },\n  'cells': new Array(625).fill({\n    opened: false,\n    flag: false,\n    isMine: false,\n    mine: 0\n  }),\n  'isInGame': false,\n  'firstClick': true,\n  'gameOver': false\n}, {\n  'level': 4,\n  'row': 20,\n  'col': 20,\n  'proportion': 1.5,\n  'mine': 30,\n  'flag': 30,\n  'setTime': {\n    isTime: true,\n    duration: 600\n  },\n  'hidden': false,\n  'cells': new Array(400).fill({\n    opened: false,\n    flag: false,\n    isMine: false,\n    mine: 0\n  }),\n  'isInGame': false,\n  'firstClick': true,\n  'gameOver': false\n}];\n\n//Custom marks of Slider component\nexport const marks = [{\n  value: 1.5,\n  label: /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"easy-green\",\n    children: \"Easy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 16\n  }, this)\n}, {\n  value: 2.5,\n  label: /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"medium-purple\",\n    children: \"Medium\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 16\n  }, this)\n}, {\n  value: 4,\n  label: /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"hard-red\",\n    children: \"Hard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 16\n  }, this)\n}];\n\n//logic game functions\n\nexport function convertToMinute(seconds) {\n  return `${Math.floor(seconds / 60)}m`;\n}\nexport const isMobileDevice = () => {\n  return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n};\n\n//Construction of cells\n// 'cells': new Array(size).fill({\n//     opened: false,\n//     flag: false,\n//     isMine: false,\n//     mine: 0\n// })\n\nfunction generateMines(initRow, initCol, rows, cols, mines, cells) {\n  const minesPosition = new Set();\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      minesPosition.add(`${initRow + i}, ${initCol + j}`);\n    }\n  }\n  while (minesPosition.size < mines + 9) {\n    const row = Math.floor(Math.random() * rows);\n    const col = Math.floor(Math.random() * cols);\n    if (!minesPosition.has(`${row}, ${col}`)) {\n      minesPosition.add(`${row}, ${col}`);\n      cells[row * cols + col].isMine = true;\n    }\n  }\n  return cells;\n}\nfunction countMineAround(row, col, rows, cols, cells) {\n  let count = 0;\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      if (i === 0 && j === 0) continue;\n      if (!(row + i < 0 || row + i >= rows) && !(col + j < 0 || col + j >= cols)) {\n        let cell = cells[(row + i) * cols + (col + j)];\n        if (cell.isMine) {\n          count++;\n        }\n      }\n    }\n  }\n  return count;\n}\nfunction revealEmptyCells(row, col, rows, cols, cells) {\n  function recursion(r, c) {\n    if (cells[r * cols + c].isMine) return;\n    let mines = countMineAround(r, c, rows, cols, cells);\n    cells[r * cols + c].opened = true;\n    if (mines > 0) {\n      cells[r * cols + c].mine = mines;\n      return;\n    } else {\n      for (let i = -1; i <= 1; i++) {\n        for (let j = -1; j <= 1; j++) {\n          if (!(r + i < 0 || r + i >= rows) && !(c + j < 0 || c + j >= cols) && !(i === 0 && j === 0)) {\n            if (!cells[(r + i) * cols + (c + j)].opened && !cells[(r + i) * cols + (c + j)].flag) {\n              recursion(r + i, c + j);\n            }\n          }\n        }\n      }\n    }\n  }\n  recursion(row, col);\n  return cells;\n}\nfunction checkWin(copyCells) {\n  let isWin;\n  if (copyCells.cells) {\n    isWin = copyCells.cells.filter(cell => {\n      return cell.isMine && cell.flag;\n    }).length === copyCells.flag;\n  } else {\n    isWin = copyCells.filter(cell => {\n      return cell.opened || cell.isMine;\n    }).length === copyCells.length;\n  }\n  if (isWin) alert('You win');\n  return isWin;\n}\nfunction isClickBomb() {}\nexport function handleClickCell(index, copySettings) {\n  // if (copySettings.cells[index].isMine){\n\n  //}\n\n  if (copySettings.cells[index].opened || copySettings.cells[index].flag) {\n    return convertToMinute;\n  }\n  const [row, col] = [Math.floor(index / copySettings.col), index % copySettings.col];\n  if (copySettings.firstClick) {\n    let cells = revealEmptyCells(row, col, copySettings.row, copySettings.col, generateMines(row, col, copySettings.row, copySettings.col, copySettings.mine, copySettings.cells));\n    return cells;\n  } else {\n    const cells = revealEmptyCells(row, col, copySettings.row, copySettings.col, copySettings.cells);\n    checkWin(cells);\n    return cells;\n  }\n}\nexport function handleToggleFlag(index, copySettings) {\n  if ((copySettings.cells[index].opened || copySettings.mine === 0) && !copySettings.cells[index].flag) return copySettings;\n  copySettings.cells[index].flag = !copySettings.cells[index].flag;\n\n  //Upgrade flag\n  if (copySettings.cells[index].flag) {\n    copySettings.mine -= 1;\n  } else {\n    copySettings.mine += 1;\n  }\n  checkWin(copySettings);\n  return copySettings;\n}","map":{"version":3,"names":["levels","isTime","duration","Array","fill","opened","flag","isMine","mine","marks","value","label","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","convertToMinute","seconds","Math","floor","isMobileDevice","test","navigator","userAgent","generateMines","initRow","initCol","rows","cols","mines","cells","minesPosition","Set","i","j","add","size","row","random","col","has","countMineAround","count","cell","revealEmptyCells","recursion","r","c","checkWin","copyCells","isWin","filter","length","alert","isClickBomb","handleClickCell","index","copySettings","firstClick","handleToggleFlag"],"sources":["D:/workspace/test/findminegame/src/Pages/MinesweeperPage/Functions.js"],"sourcesContent":["\r\n// Levels of game\r\nexport const levels = [\r\n    {\r\n        'level': 0,\r\n        'row': 0,\r\n        'col': 0,\r\n        'proportion': 0,\r\n        'mine': 0,\r\n        'flag': 0,\r\n        'setTime': {\r\n            isTime: true,\r\n            duration: 0\r\n        },\r\n        'cells': [],\r\n        'isInGame': false,\r\n        'firstClick': true,\r\n        'gameOver': false\r\n    },\r\n    {\r\n        'level': 1,\r\n        'row': 10,\r\n        'col': 10,\r\n        'proportion': 1.5,\r\n        'mine': 15,\r\n        'flag': 15,\r\n        'setTime': {\r\n            isTime: true,\r\n            duration: 300\r\n        },\r\n        'cells': new Array(100).fill({\r\n            opened: false,\r\n            flag: false,\r\n            isMine: false,\r\n            mine: 0\r\n        }),\r\n        'isInGame': false,\r\n        'firstClick': true,\r\n        'gameOver': false\r\n    },\r\n    {\r\n        'level': 2,\r\n        'row': 15,\r\n        'col': 15,\r\n        'proportion': 2.5,\r\n        'mine': 37,\r\n        'flag': 37,\r\n        'setTime': {\r\n            isTime: true,\r\n            duration: 420\r\n        },\r\n        'cells': new Array(225).fill({\r\n            opened: false,\r\n            flag: false,\r\n            isMine: false,\r\n            mine: 0\r\n        }),\r\n        'isInGame': false,\r\n        'firstClick': true,\r\n        'gameOver': false\r\n    },\r\n    {\r\n        'level': 3,\r\n        'row': 25,\r\n        'col': 25,\r\n        'proportion': 4,\r\n        'mine': 100,\r\n        'flag': 100,\r\n        'setTime': {\r\n            isTime: true,\r\n            duration: 600\r\n        },\r\n        'cells': new Array(625).fill({\r\n            opened: false,\r\n            flag: false,\r\n            isMine: false,\r\n            mine: 0\r\n        }),\r\n        'isInGame': false,\r\n        'firstClick': true,\r\n        'gameOver': false\r\n    },\r\n    {\r\n        'level': 4,\r\n        'row': 20,\r\n        'col': 20,\r\n        'proportion': 1.5,\r\n        'mine': 30,\r\n        'flag': 30,\r\n        'setTime': {\r\n            isTime: true,\r\n            duration: 600\r\n        },\r\n        'hidden': false,\r\n        'cells': new Array(400).fill({\r\n            opened: false,\r\n            flag: false,\r\n            isMine: false,\r\n            mine: 0\r\n        }),\r\n        'isInGame': false,\r\n        'firstClick': true,\r\n        'gameOver': false\r\n    }\r\n]\r\n\r\n\r\n//Custom marks of Slider component\r\nexport const marks = [\r\n    {\r\n        value: 1.5,\r\n        label: <label className=\"easy-green\">Easy</label>\r\n    },\r\n    {\r\n        value: 2.5,\r\n        label: <label className=\"medium-purple\">Medium</label>\r\n    },\r\n    {\r\n        value: 4,\r\n        label: <label className=\"hard-red\">Hard</label>\r\n    }\r\n];\r\n\r\n//logic game functions\r\n\r\nexport function convertToMinute(seconds) {\r\n    return `${Math.floor(seconds / 60)}m`\r\n}\r\n\r\nexport const isMobileDevice = () => {\r\n    return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n}\r\n\r\n//Construction of cells\r\n// 'cells': new Array(size).fill({\r\n//     opened: false,\r\n//     flag: false,\r\n//     isMine: false,\r\n//     mine: 0\r\n// })\r\n\r\nfunction generateMines(initRow, initCol, rows, cols, mines, cells) {\r\n    const minesPosition = new Set()\r\n\r\n\r\n    for (let i = -1; i <= 1; i++) {\r\n        for (let j = -1; j <= 1; j++) {\r\n            minesPosition.add(`${initRow + i}, ${initCol + j}`)\r\n        }\r\n    }\r\n\r\n    while (minesPosition.size < mines + 9) {\r\n        const row = Math.floor(Math.random() * rows)\r\n        const col = Math.floor(Math.random() * cols)\r\n\r\n        if (!minesPosition.has(`${row}, ${col}`)) {\r\n            minesPosition.add(`${row}, ${col}`)\r\n            cells[row * cols + col].isMine = true\r\n        }\r\n    }\r\n    return cells\r\n}\r\n\r\nfunction countMineAround(row, col, rows, cols, cells) {\r\n\r\n    let count = 0\r\n    for (let i = -1; i <= 1; i++) {\r\n        for (let j = -1; j <= 1; j++) {\r\n            if (i === 0 && j === 0) continue\r\n\r\n            if (\r\n                !((row + i < 0) || (row + i >= rows)) &&\r\n                !((col + j < 0) || (col + j >= cols))\r\n            ) {\r\n                let cell = cells[(row + i) * cols + (col + j)]\r\n\r\n                if (cell.isMine) {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return count\r\n}\r\n\r\nfunction revealEmptyCells(row, col, rows, cols, cells) {\r\n\r\n    function recursion(r, c) {\r\n        if (cells[r * cols + c].isMine) return\r\n\r\n        let mines = countMineAround(r, c, rows, cols, cells)\r\n        cells[r * cols + c].opened = true\r\n\r\n        if (mines > 0) {\r\n            cells[r * cols + c].mine = mines\r\n            return\r\n        } else {\r\n            for (let i = -1; i <= 1; i++) {\r\n                for (let j = -1; j <= 1; j++) {\r\n                    if (\r\n                        !((r + i < 0) || (r + i >= rows)) &&\r\n                        !((c + j < 0) || (c + j >= cols)) &&\r\n                        !(i === 0 && j === 0)\r\n                    ) {\r\n                        if (!cells[(r + i) * cols + (c + j)].opened &&\r\n                            !cells[(r + i) * cols + (c + j)].flag) \r\n                        {\r\n                            recursion(r + i, c + j)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    recursion(row, col)\r\n\r\n    return cells\r\n\r\n}\r\n\r\nfunction checkWin(copyCells){\r\n    let isWin;\r\n\r\n    if (copyCells.cells){\r\n\r\n        isWin = (copyCells.cells.filter(cell => {\r\n            return cell.isMine && cell.flag\r\n        }).length === copyCells.flag)\r\n    } else {\r\n        isWin = (copyCells.filter(cell => {\r\n            return cell.opened || cell.isMine\r\n        }).length === copyCells.length)\r\n    }\r\n\r\n    if (isWin) alert('You win')\r\n\r\n    return isWin\r\n}\r\n\r\nfunction isClickBomb(){\r\n\r\n}\r\n\r\nexport function handleClickCell(index, copySettings) {\r\n    // if (copySettings.cells[index].isMine){\r\n\r\n    //}\r\n\r\n    if (copySettings.cells[index].opened || copySettings.cells[index].flag) {\r\n        return convertToMinute;\r\n    }\r\n\r\n    const [row, col] = [\r\n        Math.floor(index / copySettings.col),\r\n        index % copySettings.col\r\n    ]\r\n\r\n    if (copySettings.firstClick) {\r\n\r\n        let cells = revealEmptyCells(\r\n            row,\r\n            col,\r\n            copySettings.row,\r\n            copySettings.col,\r\n            generateMines(\r\n                row,\r\n                col,\r\n                copySettings.row,\r\n                copySettings.col,\r\n                copySettings.mine,\r\n                copySettings.cells\r\n            )\r\n        )\r\n        return cells\r\n\r\n    } else {\r\n        const cells = revealEmptyCells(\r\n            row,\r\n            col,\r\n            copySettings.row,\r\n            copySettings.col,\r\n            copySettings.cells\r\n        )\r\n\r\n        checkWin(cells)\r\n        return cells\r\n    }\r\n\r\n}\r\n\r\nexport function handleToggleFlag(index, copySettings) {\r\n\r\n    if (\r\n        (copySettings.cells[index].opened || \r\n         copySettings.mine === 0) &&\r\n        !copySettings.cells[index].flag\r\n    ) return copySettings\r\n\r\n    copySettings.cells[index].flag = !copySettings.cells[index].flag\r\n\r\n    //Upgrade flag\r\n    if (copySettings.cells[index].flag){\r\n        copySettings.mine -= 1\r\n    } else {\r\n        copySettings.mine += 1\r\n    }\r\n\r\n    checkWin(copySettings)\r\n    return copySettings\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}