{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\test\\\\findminegame\\\\src\\\\Pages\\\\MinesweeperPage\\\\Minesweeper.js\",\n  _s = $RefreshSig$();\nimport { useState, useReducer } from 'react';\nimport OptionsBar from './OptionBar';\nimport SettingsBroad from './SettingsBroad';\nimport { initialState, reducer } from './Reducer';\nimport { marks, convertToMinute, generateGameBroad, isMobileDevice } from './Functions';\nimport \"./Minesweeper.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Minesweeper() {\n  _s();\n  const [settings, dispatch] = useReducer(reducer, initialState);\n\n  // function handleSelectChange(event) {\n  //     setSettings(prevState => {\n  //         return {\n  //             ...prevState,\n  //             ...levels[event.target.value]\n  //         }\n  //     })\n  // }\n\n  // function handleRowChange(_, newRow) {\n  //     setSettings(prevState => {\n  //         return {\n  //             ...prevState,\n  //             'row': newRow,\n  //             'mine': Math.floor((newRow + prevState.col) / 2 * prevState.proportion)\n  //         }\n  //     })\n  // }\n  // function handleColumnChange(_, newColumn) {\n  //     setSettings(prevState => {\n  //         return {\n  //             ...prevState,\n  //             'col': newColumn,\n  //             'mine': Math.floor((newColumn + prevState.row) / 2 * prevState.proportion)\n  //         }\n  //     })\n  // }\n  // function handleProportionChange(_, newProportion) {\n  //     setSettings(prevState => {\n  //         return {\n  //             ...prevState,\n  //             'proportion': newProportion,\n  //             'mine': Math.floor((prevState.row + prevState.col) / 2 * newProportion)\n  //         }\n  //     })\n  // }\n\n  // function handleSetTime() {\n  //     setSettings(prevState => {\n  //         return {\n  //             ...prevState,\n  //             'setTime': {\n  //                 ...prevState.setTime,\n  //                 isTime: !prevState.setTime.isTime\n  //             }\n  //         }\n  //     })\n  // }\n\n  // function handleSetDuration(_, newDuration) {\n  //     setSettings(prevState => {\n  //         return {\n  //             ...prevState,\n  //             'setTime': {\n  //                 ...prevState.setTime,\n  //                 duration: newDuration\n  //             }\n  //         }\n  //     })\n  // }\n\n  // function handleHiddenSettings() {\n  //     setSettings(prevState => {\n  //         return {\n  //             ...prevState,\n  //             'hidden': !prevState.hidden\n  //         }\n  //     })\n  // }\n\n  //console.log(settings);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"minesweeper\",\n    children: [/*#__PURE__*/_jsxDEV(OptionsBar, {\n      settings: settings,\n      dispatch: dispatch,\n      setSelect: setSelect,\n      setHiddenSetting: setHiddenSetting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minesweeper-broad\",\n      children: [/*#__PURE__*/_jsxDEV(SettingsBroad, {\n        settings: settings,\n        dispatch: dispatch,\n        marks: marks,\n        convertToMinute: convertToMinute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameOver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-broad\",\n        style: {\n          display: 'grid',\n          gridTemplateRows: `repeat(\n                                    ${settings.row},\n                                    ${isMobileDevice() ? 3 : 4}rem\n                                )`,\n          gridTemplateColumns: `repeat(\n                                    ${settings.col},\n                                    ${isMobileDevice() ? 3 : 4}rem\n                                )`\n        },\n        children: generateGameBroad(settings.row, settings.col)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(Minesweeper, \"urGENEzLN2EJKG3lubM+JqpGPTs=\");\n_c = Minesweeper;\nexport default Minesweeper;\nvar _c;\n$RefreshReg$(_c, \"Minesweeper\");","map":{"version":3,"names":["useState","useReducer","OptionsBar","SettingsBroad","initialState","reducer","marks","convertToMinute","generateGameBroad","isMobileDevice","jsxDEV","_jsxDEV","Minesweeper","_s","settings","dispatch","className","children","setSelect","setHiddenSetting","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateRows","row","gridTemplateColumns","col","_c","$RefreshReg$"],"sources":["D:/workspace/test/findminegame/src/Pages/MinesweeperPage/Minesweeper.js"],"sourcesContent":["import { useState, useReducer } from 'react'\r\nimport OptionsBar from './OptionBar';\r\nimport SettingsBroad from './SettingsBroad';\r\nimport { initialState, reducer } from './Reducer'\r\nimport { \r\n    marks, \r\n    convertToMinute, \r\n    generateGameBroad,\r\n    isMobileDevice\r\n} from './Functions';\r\nimport \"./Minesweeper.css\";\r\n\r\n\r\nfunction Minesweeper() {\r\n\r\n    const [settings, dispatch] = useReducer(reducer, initialState)\r\n\r\n    // function handleSelectChange(event) {\r\n    //     setSettings(prevState => {\r\n    //         return {\r\n    //             ...prevState,\r\n    //             ...levels[event.target.value]\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // function handleRowChange(_, newRow) {\r\n    //     setSettings(prevState => {\r\n    //         return {\r\n    //             ...prevState,\r\n    //             'row': newRow,\r\n    //             'mine': Math.floor((newRow + prevState.col) / 2 * prevState.proportion)\r\n    //         }\r\n    //     })\r\n    // }\r\n    // function handleColumnChange(_, newColumn) {\r\n    //     setSettings(prevState => {\r\n    //         return {\r\n    //             ...prevState,\r\n    //             'col': newColumn,\r\n    //             'mine': Math.floor((newColumn + prevState.row) / 2 * prevState.proportion)\r\n    //         }\r\n    //     })\r\n    // }\r\n    // function handleProportionChange(_, newProportion) {\r\n    //     setSettings(prevState => {\r\n    //         return {\r\n    //             ...prevState,\r\n    //             'proportion': newProportion,\r\n    //             'mine': Math.floor((prevState.row + prevState.col) / 2 * newProportion)\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // function handleSetTime() {\r\n    //     setSettings(prevState => {\r\n    //         return {\r\n    //             ...prevState,\r\n    //             'setTime': {\r\n    //                 ...prevState.setTime,\r\n    //                 isTime: !prevState.setTime.isTime\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // function handleSetDuration(_, newDuration) {\r\n    //     setSettings(prevState => {\r\n    //         return {\r\n    //             ...prevState,\r\n    //             'setTime': {\r\n    //                 ...prevState.setTime,\r\n    //                 duration: newDuration\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // function handleHiddenSettings() {\r\n    //     setSettings(prevState => {\r\n    //         return {\r\n    //             ...prevState,\r\n    //             'hidden': !prevState.hidden\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    //console.log(settings);\r\n    return (\r\n        <div className=\"minesweeper\">\r\n            {/* Thanh thong tin */}\r\n            <OptionsBar \r\n                settings={settings}\r\n                dispatch={dispatch}\r\n                setSelect={setSelect}\r\n                setHiddenSetting={setHiddenSetting}\r\n            />\r\n            <div className=\"minesweeper-broad\">\r\n                {/* Bang cau hinh game */}\r\n                <SettingsBroad \r\n                    settings={settings}\r\n                    dispatch={dispatch}\r\n                    marks={marks}\r\n                    convertToMinute={convertToMinute}\r\n                />\r\n                \r\n                <div className=\"logger\"></div>\r\n                <div className=\"gameOver\"></div>\r\n                {/* Bang game chinh */}\r\n                <div \r\n                    className=\"game-broad\"\r\n                    style={\r\n                        {\r\n                            display: 'grid',\r\n                            gridTemplateRows: \r\n                                `repeat(\r\n                                    ${settings.row},\r\n                                    ${isMobileDevice() ? 3 : 4}rem\r\n                                )`,\r\n                            gridTemplateColumns:\r\n                                `repeat(\r\n                                    ${settings.col},\r\n                                    ${isMobileDevice() ? 3 : 4}rem\r\n                                )`,\r\n                        }\r\n                    }\r\n                >\r\n                    {\r\n                        generateGameBroad(\r\n                            settings.row,\r\n                            settings.col\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Minesweeper\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,YAAY,EAAEC,OAAO,QAAQ,WAAW;AACjD,SACIC,KAAK,EACLC,eAAe,EACfC,iBAAiB,EACjBC,cAAc,QACX,aAAa;AACpB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGd,UAAU,CAACI,OAAO,EAAED,YAAY,CAAC;;EAE9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACIO,OAAA;IAAKK,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAExBN,OAAA,CAACT,UAAU;MACPY,QAAQ,EAAEA,QAAS;MACnBC,QAAQ,EAAEA,QAAS;MACnBG,SAAS,EAAEA,SAAU;MACrBC,gBAAgB,EAAEA;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFZ,OAAA;MAAKK,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAE9BN,OAAA,CAACR,aAAa;QACVW,QAAQ,EAAEA,QAAS;QACnBC,QAAQ,EAAEA,QAAS;QACnBT,KAAK,EAAEA,KAAM;QACbC,eAAe,EAAEA;MAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eAEFZ,OAAA;QAAKK,SAAS,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9BZ,OAAA;QAAKK,SAAS,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEhCZ,OAAA;QACIK,SAAS,EAAC,YAAY;QACtBQ,KAAK,EACD;UACIC,OAAO,EAAE,MAAM;UACfC,gBAAgB,EACZ;AAChC,sCAAsCZ,QAAQ,CAACa,GAAG;AAClD,sCAAsClB,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AAC9D,kCAAkC;UACNmB,mBAAmB,EACf;AAChC,sCAAsCd,QAAQ,CAACe,GAAG;AAClD,sCAAsCpB,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AAC9D;QACwB,CACH;QAAAQ,QAAA,EAGGT,iBAAiB,CACbM,QAAQ,CAACa,GAAG,EACZb,QAAQ,CAACe,GACb;MAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACV,EAAA,CA5HQD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AA8HpB,eAAeA,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}