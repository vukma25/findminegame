{"ast":null,"code":"import { SET_ROW_ACTION, SET_COL_ACTION, SET_PRO_ACTION, SET_DURATION_ACTION, TOGGLE_SETTING_ACTION, SELECT_CHANGE_ACTION, SET_TIME_ACTION, IS_IN_GAME_ACTION, RESET_SETTING_ACTION, RESTART_GAME_ACTION, RIGHT_CLICK_CELL_ACTION, LEFT_CLICK_CELL_ACTION } from './Action';\nimport { levels } from './Functions';\nexport const initialState = {\n  'level': 0,\n  'row': 0,\n  'col': 0,\n  'proportion': 0,\n  'mine': 0,\n  'flag': 0,\n  'setTime': {\n    isTime: true,\n    duration: 0\n  },\n  'hidden': false,\n  'cells': [],\n  'isInGame': false,\n  'firstClick': true,\n  'gameOver': false\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case SET_ROW_ACTION:\n      return {\n        ...state,\n        'row': action.payload,\n        'mine': Math.floor((state.col + action.payload) / 2 * state.proportion),\n        'flag': Math.floor((state.col + action.payload) / 2 * state.proportion),\n        'cells': new Array(action.payload * state.col).fill({\n          opened: false,\n          flag: false,\n          isMine: false,\n          mine: 0\n        })\n      };\n    case SET_COL_ACTION:\n      return {\n        ...state,\n        'col': action.payload,\n        'mine': Math.floor((state.row + action.payload) / 2 * state.proportion),\n        'flag': Math.floor((state.row + action.payload) / 2 * state.proportion),\n        'cells': new Array(action.payload * state.row).fill({\n          opened: false,\n          flag: false,\n          isMine: false,\n          mine: 0\n        })\n      };\n    case SET_PRO_ACTION:\n      return {\n        ...state,\n        'proportion': action.payload,\n        'mine': Math.floor((state.col + state.row) / 2 * action.payload),\n        'flag': Math.floor((state.col + state.row) / 2 * action.payload)\n      };\n    case SET_TIME_ACTION:\n      return {\n        ...state,\n        'setTime': {\n          ...state.setTime,\n          'isTime': !state.setTime.isTime\n        }\n      };\n    case SET_DURATION_ACTION:\n      return {\n        ...state,\n        'setTime': {\n          ...state.setTime,\n          'duration': action.payload\n        }\n      };\n    case SELECT_CHANGE_ACTION:\n      return {\n        ...state,\n        ...levels[action.payload]\n      };\n    case TOGGLE_SETTING_ACTION:\n      return {\n        ...state,\n        'hidden': !state.hidden\n      };\n    case IS_IN_GAME_ACTION:\n      return {\n        ...state,\n        'isInGame': true,\n        'hidden': true\n      };\n    case RESET_SETTING_ACTION:\n      return {\n        ...state,\n        ...levels[4],\n        'isInGame': false\n      };\n    case LEFT_CLICK_CELL_ACTION:\n      return {\n        ...state,\n        ...action.payload,\n        'firstClick': false\n      };\n    case RIGHT_CLICK_CELL_ACTION:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case RESTART_GAME_ACTION:\n      return {\n        ...state,\n        ...levels[state.level]\n      };\n    default:\n      throw new Error('Invalid action');\n  }\n};","map":{"version":3,"names":["SET_ROW_ACTION","SET_COL_ACTION","SET_PRO_ACTION","SET_DURATION_ACTION","TOGGLE_SETTING_ACTION","SELECT_CHANGE_ACTION","SET_TIME_ACTION","IS_IN_GAME_ACTION","RESET_SETTING_ACTION","RESTART_GAME_ACTION","RIGHT_CLICK_CELL_ACTION","LEFT_CLICK_CELL_ACTION","levels","initialState","isTime","duration","reducer","state","action","type","payload","Math","floor","col","proportion","Array","fill","opened","flag","isMine","mine","row","setTime","hidden","level","Error"],"sources":["D:/workspace/test/findminegame/src/Pages/MinesweeperPage/Reducer.js"],"sourcesContent":["import {\r\n    SET_ROW_ACTION,\r\n    SET_COL_ACTION,\r\n    SET_PRO_ACTION,\r\n    SET_DURATION_ACTION,\r\n    TOGGLE_SETTING_ACTION,\r\n    SELECT_CHANGE_ACTION,\r\n    SET_TIME_ACTION,\r\n    IS_IN_GAME_ACTION,\r\n    RESET_SETTING_ACTION,\r\n    RESTART_GAME_ACTION,\r\n    RIGHT_CLICK_CELL_ACTION,\r\n    LEFT_CLICK_CELL_ACTION\r\n} from './Action';\r\nimport {\r\n    levels\r\n} from './Functions';\r\n\r\nexport const initialState = {\r\n    'level': 0,\r\n    'row': 0,\r\n    'col': 0,\r\n    'proportion': 0,\r\n    'mine': 0,\r\n    'flag': 0,\r\n    'setTime': {\r\n        isTime: true,\r\n        duration: 0\r\n    },\r\n    'hidden': false,\r\n    'cells': [],\r\n    'isInGame': false,\r\n    'firstClick': true,\r\n    'gameOver': false,\r\n    \r\n}\r\n\r\nexport const reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_ROW_ACTION:\r\n            return {\r\n                ...state,\r\n                'row': action.payload,\r\n                'mine': Math.floor((state.col + action.payload) / 2 * state.proportion),\r\n                'flag': Math.floor((state.col + action.payload) / 2 * state.proportion),\r\n                'cells': new Array(action.payload * state.col).fill({\r\n                    opened: false,\r\n                    flag: false,\r\n                    isMine: false,\r\n                    mine: 0\r\n                })\r\n            }\r\n        case SET_COL_ACTION:\r\n            return {\r\n                ...state,\r\n                'col': action.payload,\r\n                'mine': Math.floor((state.row + action.payload) / 2 * state.proportion),\r\n                'flag': Math.floor((state.row + action.payload) / 2 * state.proportion),\r\n                'cells': new Array(action.payload * state.row).fill({\r\n                    opened: false,\r\n                    flag: false,\r\n                    isMine: false,\r\n                    mine: 0\r\n                })\r\n            }\r\n        case SET_PRO_ACTION:\r\n            return {\r\n                ...state,\r\n                'proportion': action.payload,\r\n                'mine': Math.floor((state.col + state.row) / 2 * action.payload),\r\n                'flag': Math.floor((state.col + state.row) / 2 * action.payload)\r\n            }\r\n        case SET_TIME_ACTION:\r\n            return {\r\n                ...state,\r\n                'setTime': {\r\n                    ...state.setTime,\r\n                    'isTime': !state.setTime.isTime\r\n                }\r\n            }\r\n        case SET_DURATION_ACTION:\r\n            return {\r\n                ...state,\r\n                'setTime': {\r\n                    ...state.setTime,\r\n                    'duration': action.payload\r\n                }\r\n            }\r\n        case SELECT_CHANGE_ACTION:\r\n            return {\r\n                ...state,\r\n                ...levels[action.payload]\r\n            }\r\n        case TOGGLE_SETTING_ACTION:\r\n            return {\r\n                ...state,\r\n                'hidden': !state.hidden\r\n            }\r\n        case IS_IN_GAME_ACTION:\r\n            return {\r\n                ...state,\r\n                'isInGame': true,\r\n                'hidden': true\r\n            }\r\n        case RESET_SETTING_ACTION:\r\n            return {\r\n                ...state,\r\n                ...levels[4],\r\n                'isInGame': false\r\n            }\r\n        case LEFT_CLICK_CELL_ACTION:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                'firstClick': false\r\n            }\r\n        case RIGHT_CLICK_CELL_ACTION:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case RESTART_GAME_ACTION: \r\n            return {\r\n                ...state,\r\n                ...levels[state.level]\r\n            }\r\n        default:\r\n            throw new Error('Invalid action')\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}