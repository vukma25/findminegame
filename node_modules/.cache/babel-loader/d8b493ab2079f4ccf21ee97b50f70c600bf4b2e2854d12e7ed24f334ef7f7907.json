{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\test\\\\findminegame\\\\src\\\\Pages\\\\MinesweeperPage\\\\Cell.js\";\nimport { setCells } from './Action';\nimport { handleClickCell } from './Functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell({\n  mine,\n  dispatch,\n  index,\n  settings\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `\n                game-broad-cell flex-div \n                ${settings.cells[index].opened ? \"open\" + mine : \"\"}\n            `,\n    onClick: () => {\n      const copyCells = settings.cells.map(cell => ({\n        ...cell\n      }));\n      const updatedCells = handleClickCell(index, settings, copyCells);\n      if (updatedCells) {\n        dispatch(setCells(updatedCells));\n      }\n    },\n    onContextMenu: () => {\n      const copyCells = settings.cells.map(cell => ({\n        ...cell\n      }));\n      const updatedCells = handleClickCell(index, settings, copyCells);\n      if (updatedCells) {\n        dispatch(setCells(updatedCells));\n      }\n    },\n    children: mine === 0 ? \"\" : mine\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["setCells","handleClickCell","jsxDEV","_jsxDEV","Cell","mine","dispatch","index","settings","className","cells","opened","onClick","copyCells","map","cell","updatedCells","onContextMenu","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/test/findminegame/src/Pages/MinesweeperPage/Cell.js"],"sourcesContent":["\r\nimport { setCells } from './Action';\r\nimport {\r\n    handleClickCell\r\n} from './Functions';\r\n\r\nfunction Cell({\r\n    mine,\r\n    dispatch,\r\n    index,\r\n    settings\r\n}) {\r\n\r\n    return (\r\n        <div\r\n            className={`\r\n                game-broad-cell flex-div \r\n                ${settings.cells[index].opened ? \"open\" + mine : \"\"}\r\n            `}\r\n            onClick={() => {\r\n                const copyCells = settings.cells.map(cell => ({ ...cell }))\r\n                const updatedCells = handleClickCell(index, settings, copyCells);\r\n                if (updatedCells) {\r\n                    dispatch(setCells(updatedCells));\r\n                }\r\n            }}\r\n            onContextMenu={() => {\r\n                const copyCells = settings.cells.map(cell => ({ ...cell }))\r\n                const updatedCells = handleClickCell(index, settings, copyCells);\r\n                if (updatedCells) {\r\n                    dispatch(setCells(updatedCells));\r\n                }\r\n            }}\r\n        >\r\n            {mine === 0 ? \"\" : mine}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cell;"],"mappings":";AACA,SAASA,QAAQ,QAAQ,UAAU;AACnC,SACIC,eAAe,QACZ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,IAAIA,CAAC;EACVC,IAAI;EACJC,QAAQ;EACRC,KAAK;EACLC;AACJ,CAAC,EAAE;EAEC,oBACIL,OAAA;IACIM,SAAS,EAAE;AACvB;AACA,kBAAkBD,QAAQ,CAACE,KAAK,CAACH,KAAK,CAAC,CAACI,MAAM,GAAG,MAAM,GAAGN,IAAI,GAAG,EAAE;AACnE,aAAc;IACFO,OAAO,EAAEA,CAAA,KAAM;MACX,MAAMC,SAAS,GAAGL,QAAQ,CAACE,KAAK,CAACI,GAAG,CAACC,IAAI,KAAK;QAAE,GAAGA;MAAK,CAAC,CAAC,CAAC;MAC3D,MAAMC,YAAY,GAAGf,eAAe,CAACM,KAAK,EAAEC,QAAQ,EAAEK,SAAS,CAAC;MAChE,IAAIG,YAAY,EAAE;QACdV,QAAQ,CAACN,QAAQ,CAACgB,YAAY,CAAC,CAAC;MACpC;IACJ,CAAE;IACFC,aAAa,EAAEA,CAAA,KAAM;MACjB,MAAMJ,SAAS,GAAGL,QAAQ,CAACE,KAAK,CAACI,GAAG,CAACC,IAAI,KAAK;QAAE,GAAGA;MAAK,CAAC,CAAC,CAAC;MAC3D,MAAMC,YAAY,GAAGf,eAAe,CAACM,KAAK,EAAEC,QAAQ,EAAEK,SAAS,CAAC;MAChE,IAAIG,YAAY,EAAE;QACdV,QAAQ,CAACN,QAAQ,CAACgB,YAAY,CAAC,CAAC;MACpC;IACJ,CAAE;IAAAE,QAAA,EAEDb,IAAI,KAAK,CAAC,GAAG,EAAE,GAAGA;EAAI;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACC,EAAA,GA/BQnB,IAAI;AAiCb,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}