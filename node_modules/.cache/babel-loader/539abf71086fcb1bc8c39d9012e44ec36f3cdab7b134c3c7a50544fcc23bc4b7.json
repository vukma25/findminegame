{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\test\\\\findminegame\\\\src\\\\Pages\\\\MinesweeperPage\\\\Cell.js\";\nimport Icon from '@mui/material/Icon';\nimport { setCells, setFlag } from './Action';\nimport { handleClickCell, handleToggleFlag, isMobileDevice } from './Functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell({\n  mine,\n  dispatch,\n  index,\n  settings,\n  setToolDisplay\n}) {\n  const copySettings = {\n    ...settings,\n    'cells': settings.cells.map(e => ({\n      ...e\n    })),\n    'setTime': {\n      ...settings.setTime\n    }\n  };\n  function leftClickForDesktop() {\n    const updatedCells = handleClickCell(index, copySettings);\n    if (updatedCells) {\n      dispatch(setCells(updatedCells));\n    }\n  }\n  function rightClickForDesktop() {\n    const updatedCells = handleToggleFlag(index, copySettings);\n    if (updatedCells) {\n      dispatch(setFlag(updatedCells));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `\n                game-broad-cell flex-div \n                ${settings.cells[index].opened ? \"open\" + mine : \"\"}\n            `,\n    onClick: e => {\n      const rect = e.target.getBoundingClientRect();\n      setToolDisplay(prev => ({\n        ...prev,\n        'style': {\n          display: 'grid',\n          top: rect.top,\n          left: rect.left\n        },\n        'index': index,\n        'settings': copySettings\n      }));\n    },\n    onContextMenu: e => {\n      e.preventDefault();\n      rightClickForDesktop();\n    },\n    children: settings.gameOver && settings.cells[index].isMine ? /*#__PURE__*/_jsxDEV(Icon, {\n      sx: {\n        fontSize: '2rem',\n        color: 'var(--cl-primary-yellow)'\n      },\n      children: \"donut_large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this) : settings.cells[index].flag ? /*#__PURE__*/_jsxDEV(Icon, {\n      sx: {\n        fontSize: '2rem',\n        color: 'var(--cl-red-flag)'\n      },\n      children: \"flag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }, this) : mine === 0 ? \"\" : mine\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["Icon","setCells","setFlag","handleClickCell","handleToggleFlag","isMobileDevice","jsxDEV","_jsxDEV","Cell","mine","dispatch","index","settings","setToolDisplay","copySettings","cells","map","e","setTime","leftClickForDesktop","updatedCells","rightClickForDesktop","className","opened","onClick","rect","target","getBoundingClientRect","prev","display","top","left","onContextMenu","preventDefault","children","gameOver","isMine","sx","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","flag","_c","$RefreshReg$"],"sources":["D:/workspace/test/findminegame/src/Pages/MinesweeperPage/Cell.js"],"sourcesContent":["import Icon from '@mui/material/Icon'\r\nimport { setCells, setFlag } from './Action';\r\nimport {\r\n    handleClickCell,\r\n    handleToggleFlag,\r\n    isMobileDevice\r\n} from './Functions';\r\n\r\nfunction Cell({\r\n    mine,\r\n    dispatch,\r\n    index,\r\n    settings,\r\n    setToolDisplay\r\n}) {\r\n\r\n\r\n    const copySettings = {\r\n        ...settings,\r\n        'cells': settings.cells.map(e => ({ ...e })),\r\n        'setTime': {\r\n            ...settings.setTime\r\n        }\r\n    }\r\n\r\n    function leftClickForDesktop() {\r\n        const updatedCells = handleClickCell(index, copySettings);\r\n        if (updatedCells) {\r\n            dispatch(setCells(updatedCells));\r\n        }\r\n    }\r\n\r\n    function rightClickForDesktop() {\r\n        const updatedCells = handleToggleFlag(index, copySettings);\r\n        if (updatedCells) {\r\n            dispatch(setFlag(updatedCells));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`\r\n                game-broad-cell flex-div \r\n                ${settings.cells[index].opened ? \"open\" + mine : \"\"}\r\n            `}\r\n            onClick={\r\n                (e) => {\r\n                    const rect = e.target.getBoundingClientRect();\r\n                    setToolDisplay(prev => ({\r\n                        ...prev,\r\n                        'style': {\r\n                            display: 'grid',\r\n                            top: rect.top,\r\n                            left: rect.left\r\n                        },\r\n                        'index': index,\r\n                        'settings': copySettings\r\n                    }));\r\n                }\r\n            }\r\n            onContextMenu={(e) => {\r\n                e.preventDefault()\r\n                rightClickForDesktop()\r\n            }}\r\n        >\r\n            {\r\n                settings.gameOver && settings.cells[index].isMine ?\r\n                    <Icon\r\n                        sx={{\r\n                            fontSize: '2rem',\r\n                            color: 'var(--cl-primary-yellow)'\r\n                        }}\r\n                    >donut_large</Icon>\r\n                    :\r\n                    (\r\n                        settings.cells[index].flag ?\r\n                            <Icon\r\n                                sx={{\r\n                                    fontSize: '2rem',\r\n                                    color: 'var(--cl-red-flag)'\r\n                                }}\r\n                            >flag</Icon>\r\n                            :\r\n                            (mine === 0 ? \"\" : mine)\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cell;"],"mappings":";AAAA,OAAOA,IAAI,MAAM,oBAAoB;AACrC,SAASC,QAAQ,EAAEC,OAAO,QAAQ,UAAU;AAC5C,SACIC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,QACX,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,IAAIA,CAAC;EACVC,IAAI;EACJC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC;AACJ,CAAC,EAAE;EAGC,MAAMC,YAAY,GAAG;IACjB,GAAGF,QAAQ;IACX,OAAO,EAAEA,QAAQ,CAACG,KAAK,CAACC,GAAG,CAACC,CAAC,KAAK;MAAE,GAAGA;IAAE,CAAC,CAAC,CAAC;IAC5C,SAAS,EAAE;MACP,GAAGL,QAAQ,CAACM;IAChB;EACJ,CAAC;EAED,SAASC,mBAAmBA,CAAA,EAAG;IAC3B,MAAMC,YAAY,GAAGjB,eAAe,CAACQ,KAAK,EAAEG,YAAY,CAAC;IACzD,IAAIM,YAAY,EAAE;MACdV,QAAQ,CAACT,QAAQ,CAACmB,YAAY,CAAC,CAAC;IACpC;EACJ;EAEA,SAASC,oBAAoBA,CAAA,EAAG;IAC5B,MAAMD,YAAY,GAAGhB,gBAAgB,CAACO,KAAK,EAAEG,YAAY,CAAC;IAC1D,IAAIM,YAAY,EAAE;MACdV,QAAQ,CAACR,OAAO,CAACkB,YAAY,CAAC,CAAC;IACnC;EACJ;EAEA,oBACIb,OAAA;IACIe,SAAS,EAAE;AACvB;AACA,kBAAkBV,QAAQ,CAACG,KAAK,CAACJ,KAAK,CAAC,CAACY,MAAM,GAAG,MAAM,GAAGd,IAAI,GAAG,EAAE;AACnE,aAAc;IACFe,OAAO,EACFP,CAAC,IAAK;MACH,MAAMQ,IAAI,GAAGR,CAAC,CAACS,MAAM,CAACC,qBAAqB,CAAC,CAAC;MAC7Cd,cAAc,CAACe,IAAI,KAAK;QACpB,GAAGA,IAAI;QACP,OAAO,EAAE;UACLC,OAAO,EAAE,MAAM;UACfC,GAAG,EAAEL,IAAI,CAACK,GAAG;UACbC,IAAI,EAAEN,IAAI,CAACM;QACf,CAAC;QACD,OAAO,EAAEpB,KAAK;QACd,UAAU,EAAEG;MAChB,CAAC,CAAC,CAAC;IACP,CACH;IACDkB,aAAa,EAAGf,CAAC,IAAK;MAClBA,CAAC,CAACgB,cAAc,CAAC,CAAC;MAClBZ,oBAAoB,CAAC,CAAC;IAC1B,CAAE;IAAAa,QAAA,EAGEtB,QAAQ,CAACuB,QAAQ,IAAIvB,QAAQ,CAACG,KAAK,CAACJ,KAAK,CAAC,CAACyB,MAAM,gBAC7C7B,OAAA,CAACP,IAAI;MACDqC,EAAE,EAAE;QACAC,QAAQ,EAAE,MAAM;QAChBC,KAAK,EAAE;MACX,CAAE;MAAAL,QAAA,EACL;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAGf/B,QAAQ,CAACG,KAAK,CAACJ,KAAK,CAAC,CAACiC,IAAI,gBACtBrC,OAAA,CAACP,IAAI;MACDqC,EAAE,EAAE;QACAC,QAAQ,EAAE,MAAM;QAChBC,KAAK,EAAE;MACX,CAAE;MAAAL,QAAA,EACL;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAEXlC,IAAI,KAAK,CAAC,GAAG,EAAE,GAAGA;EAC1B;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEd;AAACE,EAAA,GAhFQrC,IAAI;AAkFb,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}