{"version":3,"file":"static/js/322.6580d60b.chunk.js","mappings":"eACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECxBxBN,EAAoBQ,EAAI,CAACJ,EAASK,KACjC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAEP,EAASM,IAC5EE,OAAOC,eAAeT,EAASM,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EV,EAAoBgB,EAAI,CAAC,EAGzBhB,EAAoBiB,EAAKC,GACjBC,QAAQC,IAAIR,OAAOS,KAAKrB,EAAoBgB,GAAGM,OAAO,CAACC,EAAUb,KACvEV,EAAoBgB,EAAEN,GAAKQ,EAASK,GAC7BA,GACL,KCNJvB,EAAoBwB,EAAKN,GAEjB,aAAeA,EAAf,qBCFRlB,EAAoByB,SAAYP,MCDhClB,EAAoBW,EAAI,CAACe,EAAKC,IAAUf,OAAOgB,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF3B,EAAoB+B,EAAK3B,IACH,qBAAX4B,QAA0BA,OAAOC,aAC1CrB,OAAOC,eAAeT,EAAS4B,OAAOC,YAAa,CAAEC,MAAO,WAE7DtB,OAAOC,eAAeT,EAAS,aAAc,CAAE8B,OAAO,KCLvDlC,EAAoBmC,EAAI,I,MCIxB,IAAIC,EAAkB,CACrB,IAAK,GAkBNpC,EAAoBgB,EAAEqB,EAAI,CAACnB,EAASK,KAE/Ba,EAAgBlB,IAElBoB,cAActC,EAAoBmC,EAAInC,EAAoBwB,EAAEN,KAK/D,IAAIqB,EAAqBC,KAA4B,sBAAIA,KAA4B,uBAAK,GACtFC,EAA6BF,EAAmBG,KAAKC,KAAKJ,GAC9DA,EAAmBG,KAzBCE,IACnB,IAAIC,EAAWD,EAAK,GAChBE,EAAcF,EAAK,GACnBG,EAAUH,EAAK,GACnB,IAAI,IAAI3C,KAAY6C,EAChB9C,EAAoBW,EAAEmC,EAAa7C,KACrCD,EAAoBO,EAAEN,GAAY6C,EAAY7C,IAIhD,IADG8C,GAASA,EAAQ/C,GACd6C,EAASG,QACdZ,EAAgBS,EAASI,OAAS,EACnCR,EAA2BG,G,KCnB5BM,UAAYC,eAAgBlC,GAC1B,MAEMmC,SAFe,8BAEHC,SAEZ,KAAET,EAAI,OAAEU,GAAWrC,EAAE2B,KAE3B,GAAe,kBAAXU,EAEF,IACEC,YAAY,CACVC,KAAM,UACNC,SAAS,IAGX,MAAMC,EAAS,IAAIN,EAAGR,EAAKe,MAG3BD,EAAOE,SAAShB,EAAKiB,cAErB,MAAMC,EAAWJ,EAAOK,oBAElB,IAAI5C,QAAQ6C,IAChBC,WAAW,KACTV,YAAY,CACVC,KAAM,wBACNC,QAASK,IAEXE,KACqB,SAApBpB,EAAKe,KAAKO,MAAmB,KAA2B,WAApBtB,EAAKe,KAAKO,MAAqB,IAAO,MAGjF,CAAE,MAAOC,GACPZ,YAAY,CACVC,KAAM,wBACNC,QAASb,EAAKiB,cAElB,CAAC,QACCN,YAAY,CACVC,KAAM,UACNC,SAAS,GAEb,CAEJ,C","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","Pages/Caro/CaroWebWorker.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"13605963\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t322: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkgameworld\"] = self[\"webpackChunkgameworld\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","/* eslint-env worker */\r\n\r\nonmessage = async function (e) {\r\n  const module = await import(\"./CaroAl.js\")\r\n\r\n  const AI = module.default\r\n\r\n  const { data, action } = e.data\r\n\r\n  if (action === \"get_best_move\") {\r\n\r\n    try {\r\n      postMessage({\r\n        type: \"loading\",\r\n        payload: true\r\n      })\r\n\r\n      const CaroAI = new AI(data.init)\r\n\r\n      //cập nhật bàn cờ mới nhất - người chơi vừa đi xong\r\n      CaroAI.setBoard(data.currentBoard)\r\n\r\n      const bestMove = CaroAI.getBestMove()\r\n\r\n      await new Promise(resolve => {\r\n        setTimeout(() => {\r\n          postMessage({\r\n            type: \"get_best_move_success\",\r\n            payload: bestMove\r\n          })\r\n          resolve()\r\n        }, data.init.level === \"hard\" ? 1500 : data.init.level === \"medium\" ? 1000 : 500)\r\n      })\r\n\r\n    } catch (err) {\r\n      postMessage({\r\n        type: \"get_best_move_failure\",\r\n        payload: data.currentBoard\r\n      })\r\n    } finally {\r\n      postMessage({\r\n        type: \"loading\",\r\n        payload: false\r\n      })\r\n    }\r\n  }\r\n}"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","p","installedChunks","i","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","push","bind","data","chunkIds","moreModules","runtime","length","pop","onmessage","async","AI","default","action","postMessage","type","payload","CaroAI","init","setBoard","currentBoard","bestMove","getBestMove","resolve","setTimeout","level","err"],"sourceRoot":""}