"use strict";(self.webpackChunkgameworld=self.webpackChunkgameworld||[]).push([[988],{988:(t,i,e)=>{e.r(i),e.d(i,{default:()=>s});class s{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this._size=(null===t||void 0===t?void 0:t.size)||9,this._grid=Array.from({length:(null===t||void 0===t?void 0:t.size)||9},()=>Array.from({length:(null===t||void 0===t?void 0:t.size)||9},()=>0)),this.difficulty=(null===t||void 0===t?void 0:t.difficulty)||40,this.answers=[],this.puzzle=[]}getPuzzle(){return this.puzzle}getSolution(){return this.solution}getSize(){return this._size}getAnswer(){return this.answers}_solve(){for(let t=0;t<this._size;t++)for(let i=0;i<this._size;i++)if(0===this._grid[t][i]){for(let e=1;e<=this._size;e++)if(this._isValid(t,i,e)){if(this._grid[t][i]=e,this._solve())return!0;this._grid[t][i]=0}return!1}return!0}_isValid(t,i,e){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._grid;for(let o=0;o<this._size;o++)if(s[t][o]===e)return!1;for(let o=0;o<this._size;o++)if(s[o][i]===e)return!1;const r=Math.sqrt(this._size),[h,l]=[r*Math.floor(t/r),r*Math.floor(i/r)];for(let o=0;o<r;o++)for(let t=0;t<r;t++)if(s[o+h][t+l]===e)return!1;return!0}_clearGrid(){this._grid=Array.from({length:this._size||9},()=>Array.from({length:this._size||9},()=>0))}_generateSuccessfullyGrid(){for(let t=0;t<this._size;t++)for(let i=0;i<this._size;i++)if(0===this._grid[t][i])return!1;return!0}_generateFullGird(){for(;!this._generateSuccessfullyGrid();){this._clearGrid();const t=new Set;for(let i=0;i<10;i++){const[i,e]=[Math.floor(Math.random()*this._size),Math.floor(Math.random()*this._size)],s=Math.floor(Math.random()*this._size)+1;!t.has("".concat(i,"-").concat(e))&&this._isValid(i,e,s)&&(this._grid[i][e]=s,t.add("".concat(i,"-").concat(e)))}this._solve()}}_getPositions(){const t=[];for(let i=0;i<this._size;i++)for(let e=0;e<this._size;e++)t.push([i,e]);return t}_shuffleArray(t){const i=t.map(t=>{let[i,e]=t;return[i,e]});for(let e=i.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[i[e],i[t]]=[i[t],i[e]]}return i}_hasUniqueSolution(t){const i=t.map(t=>t.map(t=>t)),e=[],s=()=>{for(let t=0;t<this._size;t++)for(let r=0;r<this._size;r++)if(0===i[t][r]){for(let h=1;h<=this._size;h++)if(this._isValid(t,r,h,i)){if(i[t][r]=h,s(),i[t][r]=0,this._size<16&&e.length>1)return;if(16===this._size&&e.length>2)return}return}e.push(1)};return s(),1===e.length}createPuzzle(){const t=this._getPositions(),i=this._shuffleArray(t);let e=0;this._generateFullGird(),this.puzzle=this._grid.map(t=>t.map(t=>t));for(const s of i){if(e>=this.difficulty)break;const[t,i]=s,r=this.puzzle[t][i];this.puzzle[t][i]=0,this._hasUniqueSolution(this.puzzle)?e+=1:this.puzzle[t][i]=r}return this._createAnswer(),this.puzzle}_createAnswer(){const t=[];for(let i=0;i<this._size;i++)for(let e=0;e<this._size;e++)0===this.puzzle[i][e]&&t.push({square:[i,e],"correct-value":this._grid[i][e]});this.answers=t}}}}]);
//# sourceMappingURL=988.fb14ed53.chunk.js.map